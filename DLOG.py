import gmpy2
from gmpy2 import mpz

p = mpz('134078079299425970995740249982058461274793658205923933\
77723561443721764030073546976801874298166903427690031\
858186486050853753882811946569946433649006084171')

g = mpz('11717829880366207009516117596335367088558084999998952205\
59997945906392949973658374667057217647146031292859482967\
5428279466566527115212748467589894601965568')

h = mpz('323947510405045044356526437872806578864909752095244\
952783479245297198197614329255807385693795855318053\
2878928001494706097394108577585732452307673444020333')

B = 2 ** 20

g_B=gmpy2.powmod(g, B, p)

hash_table = {}

for x1 in range(B):
    value = (h * gmpy2.invert(gmpy2.powmod(g, x1, p), p)) % p
    hash_table[value] = x1
for x0 in range(B):
    if x0 % (B // 10) == 0:
        print(f"Checking x0 = {x0} / {B}")
    value = gmpy2.powmod(g_B, x0, p)
    if value in hash_table:
        x1 = hash_table[value]
        x = x0 * B + x1
        print(x)
        break
