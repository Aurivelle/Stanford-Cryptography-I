import gmpy2
from gmpy2 import mpz, invert

N = mpz('17976931348623159077293051907890247336179769789423065727343008115 \
77326758055056206869853794492129829595855013875371640157101398586 \
47833778606925583497541085196591615128057575940752635007475935288 \
71082364994994077189561705436114947486504671101510156394068052754 \
0071584560878577663743040086340742855278549092581')
e = 65537
ciphertext = mpz('22096451867410381776306561134883418017410069787892831071731839143676135600120538004282329650473509424343946219751512256465839967942889460764542040581564748988013734864120452325229320176487916666402997509188729971690526083222067771600019329260870009579993724077458967773697817571267229951148662959627934791540')

p = mpz('13407807929942597099574024998205846127479365820592393377723561443721764030073662768891111614362326998675040546094339320838419523375986027530441562135724301')
q = mpz(N // p)

phi_N = (p - 1) * (q - 1)

d = invert(e, phi_N)

m = gmpy2.powmod(ciphertext, d, N)

hex_m = hex(m)[2:]
if len(hex_m) % 2:
    hex_m = '0' + hex_m
message_bytes = bytes.fromhex(hex_m)

seperator_index = message_bytes.find(b'\x00', 2)
plaintext = message_bytes[seperator_index + 1:]

print(plaintext.decode())

